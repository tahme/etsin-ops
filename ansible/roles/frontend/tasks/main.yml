---

  - name: Remove frontend dependencies from node_modules that are not listed in package.json
    shell: npm prune
    become_user: "{{ app_user }}"
    args:
      executable: /bin/bash
      chdir: "{{ web_app_frontend_path }}"

  - block:

      # - name: Update frontend dependency version numbers to latest ones
      #   shell: ncu -u
      #   become_user: "{{ app_user }}"
      #   args:
      #     chdir: "{{ web_app_frontend_path }}"

      - name: Install frontend dependencies based on package.json for local development environment
        shell: npm install
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"

      - name: Run frontend dev build for local development environment
        shell: npm run dev-build
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"

    when: deployment_environment_id == 'local_development'

  - block:

      - name: Copy .env file to frontend root directory
        template:
          src: ".env.j2"
          dest: "{{ web_app_frontend_path }}/.env"
          owner: "{{ app_user }}"
          group: etsin
          mode: 0755

      - name: Install frontend dependencies based on package.json for NON local development environment
        shell: npm install --only=production
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"

      - name: Run frontend build for pouta test environments
        shell: npm run build -- --define process.env.NODE_ENV="'test'"
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"
        when: deployment_environment_id in ['test', 'stable', 'demo']

      - name: Run frontend build for production-like pouta environments
        shell: npm run build
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"
        when: deployment_environment_id == 'staging'

      - name: Run frontend build for production environment
        shell: npm run build -- --define process.env.MATOMO="'true'"
        become_user: "{{ app_user }}"
        args:
          executable: /bin/bash
          chdir: "{{ web_app_frontend_path }}"
        when: deployment_environment_id == 'production'


    when: deployment_environment_id != 'local_development'
